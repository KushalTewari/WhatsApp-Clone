{"version":3,"sources":["StateProvider.js","firebase.js","SidebarChat.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8cc2bac.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value = {useReducer( reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCBJna5YV4l4AhvpYXQInwChHcLsr6v52M\",\r\n  authDomain: \"whatsapp-clone-3479e.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-3479e\",\r\n  storageBucket: \"whatsapp-clone-3479e.appspot.com\",\r\n  messagingSenderId: \"1051284775798\",\r\n  appId: \"1:1051284775798:web:d05c01fb8add3b8efa9057\",\r\n  measurementId: \"G-9KJE7X7B35\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport { auth, provider};\r\nexport default db;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./SidebarChat.css\";\r\nimport db from './firebase';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n      if (id) {\r\n        db.collection('rooms').doc(id).collection('messages').orderBy('timestamp' , 'desc').onSnapshot( snapshot => (\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        ))\r\n      }\r\n  }, [])\r\n\r\n     useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n     }, []);\r\n\r\n    const createChat = () =>{\r\n      const roomName = prompt(\"Please enter name for chat\");\r\n     \r\n      if(roomName) {\r\n        //do some clever database stuff...\r\n        db.collection('rooms').add({\r\n          name:roomName,\r\n        });\r\n      }\r\n    };\r\n\r\n\r\n\r\n  return !addNewChat ? (\r\n    <Link to = {`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n      <Avatar src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`} />\r\n      <div className=\"sidebarChat__info\">\r\n        <h2>{ name }</h2>\r\n        <p>{messages[0]?.message}</p>\r\n      </div>\r\n    </div>\r\n    </Link>\r\n    \r\n  ):(\r\n    <div onClick={createChat}\r\n    className=\"sidebarChat\">\r\n      <h2>Add new Chat</h2>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport { useStateValue } from './StateProvider';\r\nimport SidebarChat from './SidebarChat';\r\nimport \"./Sidebar.css\";\r\nimport db from \"./firebase\";\r\n\r\nfunction Sidebar() {\r\n   const [rooms, setRooms ] = useState([]);\r\n   const [{ user }, dispatch]=useStateValue();\r\n\r\n   useEffect(() => {\r\n      const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n        setRooms(snapshot.docs.map((doc) =>\r\n          ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n          )\r\n      ));\r\n      return () => {\r\n        unsubscribe();\r\n       }\r\n   }, []);\r\n\r\n  return (\r\n    <div  className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL}/>\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n          <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n          <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n          <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n        <SearchOutlined />\r\n        <input placeholder=\"Search or Start a new Chat \" type=\"text\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__chats\">\r\n         <SidebarChat addNewChat/>\r\n         {rooms.map(room => (\r\n           <SidebarChat key={room.id} id={room.id}\r\n           name={room.data.name} />\r\n         ))}\r\n         \r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./Chat.css\";\r\nimport db from './firebase';\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n  const [input, setInput]=useState(\"\");\r\n  const [seed, setSeed] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n  useEffect(() => {\r\n     if(roomId) {\r\n      db.collection('rooms')\r\n      .doc(roomId)\r\n      .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection('rooms')\r\n      .doc(roomId)\r\n      .collection(\"messages\")\r\n      .orderBy('timestamp', 'asc')\r\n      .onSnapshot((snapshot) => \r\n        setMessages(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n       \r\n     }\r\n  },[roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  },[roomId]);\r\n\r\n const sendMessage = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"You typed >>>\", input);\r\n     \r\n       db.collection('rooms').doc(roomId).collection('messages').add({\r\n         message: input,\r\n         name:user.displayName,\r\n         timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n       });\r\n      setInput(\"\");\r\n };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            last seen{\" \"}\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n              ).toUTCString()}\r\n          </p>\r\n        </div>\r\n         <div className=\"chat__headerRight\">\r\n           <IconButton>\r\n             <SearchOutlined />\r\n           </IconButton>\r\n           <IconButton>\r\n             <AttachFile />\r\n           </IconButton>\r\n           <IconButton>\r\n             <MoreVert />\r\n           </IconButton>\r\n         </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p className={`chat__message ${message.name == user.displayName &&\r\n            \"chat__receiver\"}`}>\r\n            <span className='chat__name'>{message.name}</span>{message.message}\r\n             <span \r\n             className=\"chat__timestamp\">\r\n               {new Date(message.timestamp?.toDate()).toUTCString()}\r\n             </span>\r\n             </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\r\n          <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n  user: null,\r\n}\r\n\r\nexport const actionTypes ={\r\n  SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type){\r\n    case actionTypes.SET_USER:\r\n       return{\r\n         ...state,\r\n         user: action.user,\r\n       };\r\n\r\n       default:\r\n         return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Login() {\r\n\r\n const [{}, dispatch]= useStateValue();\r\n\r\n  const signIn = () =>{\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      dispatch({\r\n        type: actionTypes.SET_USER,\r\n        user: result.user,\r\n      });\r\n    }\r\n      ).catch((error) => alert(error.message));\r\n\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/897px-WhatsApp.svg.png\"\r\n        alt=\"\"/>\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to Whatsapp</h1>\r\n        </div>\r\n        <Button onClick={signIn}>Sign In with Google</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStateValue } from \"./StateProvider\";\n\n\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\"> \n    { !user ? (\n      <Login />\n    ):(\n      <div className=\"app__body\">\n        <Router>\n          <Sidebar />\n            \n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n             <Chat />\n            </Route>\n\n           <Route path='/'> \n             <Chat />\n            </Route>\n          </Switch>\n       </Router>\n      </div>\n      \n    )}     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n    reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}